apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'

defaultTasks('zip')

sourceCompatibility = JavaVersion.VERSION_11

sourceSets {
	main {
		java {
			srcDir('dist/game/data/scripts')
		}
	}
}

repositories {
    mavenCentral()
}

dependencies {
	compile 'org.slf4j:slf4j-api:1.7.25'
	compile files('../l2j_server/dist/libs/mmocore.jar')
	compile project(':l2j_server')
	compile group: 'org.jdbi', name: 'jdbi3-core', version: '3.4.0'
	compile group: 'org.jdbi', name: 'jdbi3-sqlobject', version: '3.4.0'
	compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.7'

	testCompile("org.assertj:assertj-core:3.11.0")
	testCompile "org.mockito:mockito-core:2.+"
	testCompile('org.junit.jupiter:junit-jupiter-api:5.2.0')
	testImplementation('org.junit.jupiter:junit-jupiter-engine:5.2.0')
}

task zip(type: Zip) {
	def fileName = 'L2J_DataPack_' + new Date().format("yyyy-MM-dd")
	archiveFileName = fileName
	from('dist')
	exclude '**/geodata/**'
	exclude '**/pathnode/**'
	println 'Build in build/distributions/' + fileName + '.zip'
}

build.finalizedBy(zip)

test {
	useJUnitPlatform()
}

eclipse {
	project {
		name = 'L2J_DataPack'
		comment 'L2J Server Project'
		natures 'org.eclipse.buildship.core.gradleprojectbuilde'
	}
}
